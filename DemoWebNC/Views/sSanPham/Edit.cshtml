@model DemoWebNC.Models.SanPham

@{
    ViewBag.Title = "Sửa sản phẩm";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm("Edit", "sSanPham", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h2>Cập nhật thông tin sản phẩm</h2>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaSP)

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GiaBan, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Anh, htmlAttributes: new { @class = "control-label" })
                    <input type="text" class="form-control" id="Anh" name="Anh" value="@Model.Anh" readonly /> <!-- Hiển thị đường dẫn file ảnh cũ -->
                    <input type="file" class="form-control" id="Anh" name="Anh" /> <!-- Trường để chọn file ảnh mới -->
                    @Html.HiddenFor(model => model.Anh) <!-- Trường ẩn để lưu giá trị đường dẫn file ảnh cũ -->
                    @Html.ValidationMessageFor(model => model.Anh, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Anh1, htmlAttributes: new { @class = "control-label" })
                    <input type="text" class="form-control" id="Anh1" name="Anh1" value="@Model.Anh1" readonly />
                    <input type="file" class="form-control" id="Anh1" name="Anh1" />
                    @Html.HiddenFor(model => model.Anh1)
                    @Html.ValidationMessageFor(model => model.Anh1, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Anh2, htmlAttributes: new { @class = "control-label" })
                    <input type="text" class="form-control" id="Anh2" name="Anh2" value="@Model.Anh2" readonly />
                    <input type="file" class="form-control" id="Anh2" name="Anh2" />
                    @Html.HiddenFor(model => model.Anh2)
                    @Html.ValidationMessageFor(model => model.Anh2, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Anh3, htmlAttributes: new { @class = "control-label" })
                    <input type="text" class="form-control" id="Anh3" name="Anh3" value="@Model.Anh3" readonly />
                    <input type="file" class="form-control" id="Anh3" name="Anh3" />
                    @Html.HiddenFor(model => model.Anh3)
                    @Html.ValidationMessageFor(model => model.Anh3, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Anh4, htmlAttributes: new { @class = "control-label" })
                    <input type="text" class="form-control" id="Anh4" name="Anh4" value="@Model.Anh4" readonly />
                    <input type="file" class="form-control" id="Anh4" name="Anh4" />
                    @Html.HiddenFor(model => model.Anh4)
                    @Html.ValidationMessageFor(model => model.Anh4, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NgayCapNhat, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.NgayCapNhat, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.NgayCapNhat, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.SoLuongTon, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SoLuongTon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SoLuongTon, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaLoaiSP, "LoaiSanPham", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("MaLoaiSP", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MaLoaiSP, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" style="margin-top: 10px;">
            <div class="col-md-12">
                <input type="submit" value="Lưu" class="btn btn-primary" />
                @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
